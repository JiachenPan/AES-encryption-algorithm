module aes_round_enc(
    // Control signal
    round_init,
    round_final,
    // Round signal
    round_key,
    round_in,
    round_out
    );
    
    
    //==========================================================================
    //  Parameters
    //==========================================================================
    
    
    
    //==========================================================================
    //  I/O Signals
    //==========================================================================
    
    // Control signal
    input   wire                round_init;
    input   wire                round_final;
    // Round signal
    input   wire        [127:0] round_key;
    input   wire        [127:0] round_in;
    output  wire        [127:0] round_out;
    
    
    //==========================================================================
    //  Internal Signals
    //==========================================================================
    
    wire        [127:0] sb_in;
    wire          [7:0] sbi_00,sbi_10,sbi_20,sbi_30;    // sb_in [127:96];
    wire          [7:0] sbi_01,sbi_11,sbi_21,sbi_31;    // sb_in [ 95:64];
    wire          [7:0] sbi_02,sbi_12,sbi_22,sbi_32;    // sb_in [ 63:32];
    wire          [7:0] sbi_03,sbi_13,sbi_23,sbi_33;    // sb_in [ 31: 0];
    wire        [127:0] sb_out;
    wire          [7:0] sbo_00,sbo_10,sbo_20,sbo_30;    // sb_out[127:96];
    wire          [7:0] sbo_01,sbo_11,sbo_21,sbo_31;    // sb_out[ 95:64];
    wire          [7:0] sbo_02,sbo_12,sbo_22,sbo_32;    // sb_out[ 63:32];
    wire          [7:0] sbo_03,sbo_13,sbo_23,sbo_33;    // sb_out[ 31: 0];
    
    wire        [127:0] sr_in;
    wire          [7:0] sri_00,sri_10,sri_20,sri_30;    // sr_in [127:96];
    wire          [7:0] sri_01,sri_11,sri_21,sri_31;    // sr_in [ 95:64];
    wire          [7:0] sri_02,sri_12,sri_22,sri_32;    // sr_in [ 63:32];
    wire          [7:0] sri_03,sri_13,sri_23,sri_33;    // sr_in [ 31: 0];
    wire        [127:0] sr_out;
    wire          [7:0] sro_00,sro_10,sro_20,sro_30;    // sr_out[127:96];
    wire          [7:0] sro_01,sro_11,sro_21,sro_31;    // sr_out[ 95:64];
    wire          [7:0] sro_02,sro_12,sro_22,sro_32;    // sr_out[ 63:32];
    wire          [7:0] sro_03,sro_13,sro_23,sro_33;    // sr_out[ 31: 0];
    
    wire        [127:0] mc_in;
    wire          [7:0] mci_00,mci_10,mci_20,mci_30;    // mc_in [127:96];
    wire          [7:0] mci_01,mci_11,mci_21,mci_31;    // mc_in [ 95:64];
    wire          [7:0] mci_02,mci_12,mci_22,mci_32;    // mc_in [ 63:32];
    wire          [7:0] mci_03,mci_13,mci_23,mci_33;    // mc_in [ 31: 0];
    wire        [127:0] mc_out;
    wire          [7:0] mco_00,mco_10,mco_20,mco_30;    // mc_out[127:96];
    wire          [7:0] mco_01,mco_11,mco_21,mco_31;    // mc_out[ 95:64];
    wire          [7:0] mco_02,mco_12,mco_22,mco_32;    // mc_out[ 63:32];
    wire          [7:0] mco_03,mco_13,mco_23,mco_33;    // mc_out[ 31: 0];
    
    wire        [127:0] ak_in;
    wire        [127:0] ak_out;
    
    
    //==========================================================================
    //  Debug
    //==========================================================================
    
    
    
    //==========================================================================
    //  Main Description
    //==========================================================================
    
    //--------------------------------------------
    //  Round function input control
    //--------------------------------------------
    assign sb_in     = round_in;
    assign sr_in     = sb_out;
    assign mc_in     = sr_out;
    assign ak_in     = (round_init )? round_in : 
                       (round_final)? sr_out   : mc_out;
    assign round_out = ak_out;
    
    
    //--------------------------------------------
    //  Sub Bytes
    //--------------------------------------------
    assign sbi_00 = sb_in[127:120];
    assign sbi_10 = sb_in[119:112];
    assign sbi_20 = sb_in[111:104];
    assign sbi_30 = sb_in[103: 96];
    assign sbi_01 = sb_in[ 95: 88];
    assign sbi_11 = sb_in[ 87: 80];
    assign sbi_21 = sb_in[ 79: 72];
    assign sbi_31 = sb_in[ 71: 64];
    assign sbi_02 = sb_in[ 63: 56];
    assign sbi_12 = sb_in[ 55: 48];
    assign sbi_22 = sb_in[ 47: 40];
    assign sbi_32 = sb_in[ 39: 32];
    assign sbi_03 = sb_in[ 31: 24];
    assign sbi_13 = sb_in[ 23: 16];
    assign sbi_23 = sb_in[ 15:  8];
    assign sbi_33 = sb_in[  7:  0];
    
    assign sbo_00 = sub(sbi_00);
    assign sbo_01 = sub(sbi_01);
    assign sbo_02 = sub(sbi_02);
    assign sbo_03 = sub(sbi_03);
    assign sbo_10 = sub(sbi_10);
    assign sbo_11 = sub(sbi_11);
    assign sbo_12 = sub(sbi_12);
    assign sbo_13 = sub(sbi_13);
    assign sbo_20 = sub(sbi_20);
    assign sbo_21 = sub(sbi_21);
    assign sbo_22 = sub(sbi_22);
    assign sbo_23 = sub(sbi_23);
    assign sbo_30 = sub(sbi_30);
    assign sbo_31 = sub(sbi_31);
    assign sbo_32 = sub(sbi_32);
    assign sbo_33 = sub(sbi_33);
    
    assign sb_out[127:120] = sbo_00;
    assign sb_out[119:112] = sbo_10;
    assign sb_out[111:104] = sbo_20;
    assign sb_out[103: 96] = sbo_30;
    assign sb_out[ 95: 88] = sbo_01;
    assign sb_out[ 87: 80] = sbo_11;
    assign sb_out[ 79: 72] = sbo_21;
    assign sb_out[ 71: 64] = sbo_31;
    assign sb_out[ 63: 56] = sbo_02;
    assign sb_out[ 55: 48] = sbo_12;
    assign sb_out[ 47: 40] = sbo_22;
    assign sb_out[ 39: 32] = sbo_32;
    assign sb_out[ 31: 24] = sbo_03;
    assign sb_out[ 23: 16] = sbo_13;
    assign sb_out[ 15:  8] = sbo_23;
    assign sb_out[  7:  0] = sbo_33;
    
    
    //--------------------------------------------
    //  Shift Rows
    //--------------------------------------------
    assign sri_00 = sr_in[127:120];
    assign sri_10 = sr_in[119:112];
    assign sri_20 = sr_in[111:104];
    assign sri_30 = sr_in[103: 96];
    assign sri_01 = sr_in[ 95: 88];
    assign sri_11 = sr_in[ 87: 80];
    assign sri_21 = sr_in[ 79: 72];
    assign sri_31 = sr_in[ 71: 64];
    assign sri_02 = sr_in[ 63: 56];
    assign sri_12 = sr_in[ 55: 48];
    assign sri_22 = sr_in[ 47: 40];
    assign sri_32 = sr_in[ 39: 32];
    assign sri_03 = sr_in[ 31: 24];
    assign sri_13 = sr_in[ 23: 16];
    assign sri_23 = sr_in[ 15:  8];
    assign sri_33 = sr_in[  7:  0];
    
    assign sro_00 = sri_00;
    assign sro_10 = sri_11;
    assign sro_20 = sri_22;
    assign sro_30 = sri_33;
    assign sro_01 = sri_01;
    assign sro_11 = sri_12;
    assign sro_21 = sri_23;
    assign sro_31 = sri_30;
    assign sro_02 = sri_02;
    assign sro_12 = sri_13;
    assign sro_22 = sri_20;
    assign sro_32 = sri_31;
    assign sro_03 = sri_03;
    assign sro_13 = sri_10;
    assign sro_23 = sri_21;
    assign sro_33 = sri_32;
    
    assign sr_out[127:120] = sro_00;
    assign sr_out[119:112] = sro_10;
    assign sr_out[111:104] = sro_20;
    assign sr_out[103: 96] = sro_30;
    assign sr_out[ 95: 88] = sro_01;
    assign sr_out[ 87: 80] = sro_11;
    assign sr_out[ 79: 72] = sro_21;
    assign sr_out[ 71: 64] = sro_31;
    assign sr_out[ 63: 56] = sro_02;
    assign sr_out[ 55: 48] = sro_12;
    assign sr_out[ 47: 40] = sro_22;
    assign sr_out[ 39: 32] = sro_32;
    assign sr_out[ 31: 24] = sro_03;
    assign sr_out[ 23: 16] = sro_13;
    assign sr_out[ 15:  8] = sro_23;
    assign sr_out[  7:  0] = sro_33;
    
    
    //--------------------------------------------
    //  Mix Columns
    //--------------------------------------------
    assign mci_00 = mc_in[127:120];
    assign mci_10 = mc_in[119:112];
    assign mci_20 = mc_in[111:104];
    assign mci_30 = mc_in[103: 96];
    assign mci_01 = mc_in[ 95: 88];
    assign mci_11 = mc_in[ 87: 80];
    assign mci_21 = mc_in[ 79: 72];
    assign mci_31 = mc_in[ 71: 64];
    assign mci_02 = mc_in[ 63: 56];
    assign mci_12 = mc_in[ 55: 48];
    assign mci_22 = mc_in[ 47: 40];
    assign mci_32 = mc_in[ 39: 32];
    assign mci_03 = mc_in[ 31: 24];
    assign mci_13 = mc_in[ 23: 16];
    assign mci_23 = mc_in[ 15:  8];
    assign mci_33 = mc_in[  7:  0];
    
    assign mco_00 = xt2(mci_00) ^ xt3(mci_10) ^     mci_20  ^     mci_30 ;
    assign mco_10 =     mci_00  ^ xt2(mci_10) ^ xt3(mci_20) ^     mci_30 ;
    assign mco_20 =     mci_00  ^     mci_10  ^ xt2(mci_20) ^ xt3(mci_30);
    assign mco_30 = xt3(mci_00) ^     mci_10  ^     mci_20  ^ xt2(mci_30);
    assign mco_01 = xt2(mci_01) ^ xt3(mci_11) ^     mci_21  ^     mci_31 ;
    assign mco_11 =     mci_01  ^ xt2(mci_11) ^ xt3(mci_21) ^     mci_31 ;
    assign mco_21 =     mci_01  ^     mci_11  ^ xt2(mci_21) ^ xt3(mci_31);
    assign mco_31 = xt3(mci_01) ^     mci_11  ^     mci_21  ^ xt2(mci_31);
    assign mco_02 = xt2(mci_02) ^ xt3(mci_12) ^     mci_22  ^     mci_32 ;
    assign mco_12 =     mci_02  ^ xt2(mci_12) ^ xt3(mci_22) ^     mci_32 ;
    assign mco_22 =     mci_02  ^     mci_12  ^ xt2(mci_22) ^ xt3(mci_32);
    assign mco_32 = xt3(mci_02) ^     mci_12  ^     mci_22  ^ xt2(mci_32);
    assign mco_03 = xt2(mci_03) ^ xt3(mci_13) ^     mci_23  ^     mci_33 ;
    assign mco_13 =     mci_03  ^ xt2(mci_13) ^ xt3(mci_23) ^     mci_33 ;
    assign mco_23 =     mci_03  ^     mci_13  ^ xt2(mci_23) ^ xt3(mci_33);
    assign mco_33 = xt3(mci_03) ^     mci_13  ^     mci_23  ^ xt2(mci_33);
    
    assign mc_out[127:120] = mco_00;
    assign mc_out[119:112] = mco_10;
    assign mc_out[111:104] = mco_20;
    assign mc_out[103: 96] = mco_30;
    assign mc_out[ 95: 88] = mco_01;
    assign mc_out[ 87: 80] = mco_11;
    assign mc_out[ 79: 72] = mco_21;
    assign mc_out[ 71: 64] = mco_31;
    assign mc_out[ 63: 56] = mco_02;
    assign mc_out[ 55: 48] = mco_12;
    assign mc_out[ 47: 40] = mco_22;
    assign mc_out[ 39: 32] = mco_32;
    assign mc_out[ 31: 24] = mco_03;
    assign mc_out[ 23: 16] = mco_13;
    assign mc_out[ 15:  8] = mco_23;
    assign mc_out[  7:  0] = mco_33;
    
    
    //--------------------------------------------
    //  Add Round Key
    //--------------------------------------------
    assign ak_out = ak_in ^ round_key;
    
    
    //--------------------------------------------------------------------
    
    
    //--------------------------------------------
    //  Multiplication
    //--------------------------------------------
    function [7:0] xt2;
        input [7:0] in;
        begin
            xt2 = {in[6:0],1'b0} ^ ({8{in[7]}} & 8'b0001_1011);
        end
    endfunction
    
    function [7:0] xt3;
        input [7:0] in;
        reg   [7:0] xt2;
        begin
            xt2 = {in[6:0],1'b0} ^ ({8{in[7]}} & 8'b0001_1011);
            xt3 = xt2 ^ in;
        end
    endfunction
    
    
    //--------------------------------------------
    //  Sub Byte Table
    //--------------------------------------------
    function [7:0] sub;
        input [7:0] in;
        begin
            case(in)
                8'h00 : sub = 8'h63;
                8'h01 : sub = 8'h7c;
                8'h02 : sub = 8'h77;
                8'h03 : sub = 8'h7b;
                8'h04 : sub = 8'hf2;
                8'h05 : sub = 8'h6b;
                8'h06 : sub = 8'h6f;
                8'h07 : sub = 8'hc5;
                8'h08 : sub = 8'h30;
                8'h09 : sub = 8'h01;
                8'h0a : sub = 8'h67;
                8'h0b : sub = 8'h2b;
                8'h0c : sub = 8'hfe;
                8'h0d : sub = 8'hd7;
                8'h0e : sub = 8'hab;
                8'h0f : sub = 8'h76;
                8'h10 : sub = 8'hca;
                8'h11 : sub = 8'h82;
                8'h12 : sub = 8'hc9;
                8'h13 : sub = 8'h7d;
                8'h14 : sub = 8'hfa;
                8'h15 : sub = 8'h59;
                8'h16 : sub = 8'h47;
                8'h17 : sub = 8'hf0;
                8'h18 : sub = 8'had;
                8'h19 : sub = 8'hd4;
                8'h1a : sub = 8'ha2;
                8'h1b : sub = 8'haf;
                8'h1c : sub = 8'h9c;
                8'h1d : sub = 8'ha4;
                8'h1e : sub = 8'h72;
                8'h1f : sub = 8'hc0;
                8'h20 : sub = 8'hb7;
                8'h21 : sub = 8'hfd;
                8'h22 : sub = 8'h93;
                8'h23 : sub = 8'h26;
                8'h24 : sub = 8'h36;
                8'h25 : sub = 8'h3f;
                8'h26 : sub = 8'hf7;
                8'h27 : sub = 8'hcc;
                8'h28 : sub = 8'h34;
                8'h29 : sub = 8'ha5;
                8'h2a : sub = 8'he5;
                8'h2b : sub = 8'hf1;
                8'h2c : sub = 8'h71;
                8'h2d : sub = 8'hd8;
                8'h2e : sub = 8'h31;
                8'h2f : sub = 8'h15;
                8'h30 : sub = 8'h04;
                8'h31 : sub = 8'hc7;
                8'h32 : sub = 8'h23;
                8'h33 : sub = 8'hc3;
                8'h34 : sub = 8'h18;
                8'h35 : sub = 8'h96;
                8'h36 : sub = 8'h05;
                8'h37 : sub = 8'h9a;
                8'h38 : sub = 8'h07;
                8'h39 : sub = 8'h12;
                8'h3a : sub = 8'h80;
                8'h3b : sub = 8'he2;
                8'h3c : sub = 8'heb;
                8'h3d : sub = 8'h27;
                8'h3e : sub = 8'hb2;
                8'h3f : sub = 8'h75;
                8'h40 : sub = 8'h09;
                8'h41 : sub = 8'h83;
                8'h42 : sub = 8'h2c;
                8'h43 : sub = 8'h1a;
                8'h44 : sub = 8'h1b;
                8'h45 : sub = 8'h6e;
                8'h46 : sub = 8'h5a;
                8'h47 : sub = 8'ha0;
                8'h48 : sub = 8'h52;
                8'h49 : sub = 8'h3b;
                8'h4a : sub = 8'hd6;
                8'h4b : sub = 8'hb3;
                8'h4c : sub = 8'h29;
                8'h4d : sub = 8'he3;
                8'h4e : sub = 8'h2f;
                8'h4f : sub = 8'h84;
                8'h50 : sub = 8'h53;
                8'h51 : sub = 8'hd1;
                8'h52 : sub = 8'h00;
                8'h53 : sub = 8'hed;
                8'h54 : sub = 8'h20;
                8'h55 : sub = 8'hfc;
                8'h56 : sub = 8'hb1;
                8'h57 : sub = 8'h5b;
                8'h58 : sub = 8'h6a;
                8'h59 : sub = 8'hcb;
                8'h5a : sub = 8'hbe;
                8'h5b : sub = 8'h39;
                8'h5c : sub = 8'h4a;
                8'h5d : sub = 8'h4c;
                8'h5e : sub = 8'h58;
                8'h5f : sub = 8'hcf;
                8'h60 : sub = 8'hd0;
                8'h61 : sub = 8'hef;
                8'h62 : sub = 8'haa;
                8'h63 : sub = 8'hfb;
                8'h64 : sub = 8'h43;
                8'h65 : sub = 8'h4d;
                8'h66 : sub = 8'h33;
                8'h67 : sub = 8'h85;
                8'h68 : sub = 8'h45;
                8'h69 : sub = 8'hf9;
                8'h6a : sub = 8'h02;
                8'h6b : sub = 8'h7f;
                8'h6c : sub = 8'h50;
                8'h6d : sub = 8'h3c;
                8'h6e : sub = 8'h9f;
                8'h6f : sub = 8'ha8;
                8'h70 : sub = 8'h51;
                8'h71 : sub = 8'ha3;
                8'h72 : sub = 8'h40;
                8'h73 : sub = 8'h8f;
                8'h74 : sub = 8'h92;
                8'h75 : sub = 8'h9d;
                8'h76 : sub = 8'h38;
                8'h77 : sub = 8'hf5;
                8'h78 : sub = 8'hbc;
                8'h79 : sub = 8'hb6;
                8'h7a : sub = 8'hda;
                8'h7b : sub = 8'h21;
                8'h7c : sub = 8'h10;
                8'h7d : sub = 8'hff;
                8'h7e : sub = 8'hf3;
                8'h7f : sub = 8'hd2;
                8'h80 : sub = 8'hcd;
                8'h81 : sub = 8'h0c;
                8'h82 : sub = 8'h13;
                8'h83 : sub = 8'hec;
                8'h84 : sub = 8'h5f;
                8'h85 : sub = 8'h97;
                8'h86 : sub = 8'h44;
                8'h87 : sub = 8'h17;
                8'h88 : sub = 8'hc4;
                8'h89 : sub = 8'ha7;
                8'h8a : sub = 8'h7e;
                8'h8b : sub = 8'h3d;
                8'h8c : sub = 8'h64;
                8'h8d : sub = 8'h5d;
                8'h8e : sub = 8'h19;
                8'h8f : sub = 8'h73;
                8'h90 : sub = 8'h60;
                8'h91 : sub = 8'h81;
                8'h92 : sub = 8'h4f;
                8'h93 : sub = 8'hdc;
                8'h94 : sub = 8'h22;
                8'h95 : sub = 8'h2a;
                8'h96 : sub = 8'h90;
                8'h97 : sub = 8'h88;
                8'h98 : sub = 8'h46;
                8'h99 : sub = 8'hee;
                8'h9a : sub = 8'hb8;
                8'h9b : sub = 8'h14;
                8'h9c : sub = 8'hde;
                8'h9d : sub = 8'h5e;
                8'h9e : sub = 8'h0b;
                8'h9f : sub = 8'hdb;
                8'ha0 : sub = 8'he0;
                8'ha1 : sub = 8'h32;
                8'ha2 : sub = 8'h3a;
                8'ha3 : sub = 8'h0a;
                8'ha4 : sub = 8'h49;
                8'ha5 : sub = 8'h06;
                8'ha6 : sub = 8'h24;
                8'ha7 : sub = 8'h5c;
                8'ha8 : sub = 8'hc2;
                8'ha9 : sub = 8'hd3;
                8'haa : sub = 8'hac;
                8'hab : sub = 8'h62;
                8'hac : sub = 8'h91;
                8'had : sub = 8'h95;
                8'hae : sub = 8'he4;
                8'haf : sub = 8'h79;
                8'hb0 : sub = 8'he7;
                8'hb1 : sub = 8'hc8;
                8'hb2 : sub = 8'h37;
                8'hb3 : sub = 8'h6d;
                8'hb4 : sub = 8'h8d;
                8'hb5 : sub = 8'hd5;
                8'hb6 : sub = 8'h4e;
                8'hb7 : sub = 8'ha9;
                8'hb8 : sub = 8'h6c;
                8'hb9 : sub = 8'h56;
                8'hba : sub = 8'hf4;
                8'hbb : sub = 8'hea;
                8'hbc : sub = 8'h65;
                8'hbd : sub = 8'h7a;
                8'hbe : sub = 8'hae;
                8'hbf : sub = 8'h08;
                8'hc0 : sub = 8'hba;
                8'hc1 : sub = 8'h78;
                8'hc2 : sub = 8'h25;
                8'hc3 : sub = 8'h2e;
                8'hc4 : sub = 8'h1c;
                8'hc5 : sub = 8'ha6;
                8'hc6 : sub = 8'hb4;
                8'hc7 : sub = 8'hc6;
                8'hc8 : sub = 8'he8;
                8'hc9 : sub = 8'hdd;
                8'hca : sub = 8'h74;
                8'hcb : sub = 8'h1f;
                8'hcc : sub = 8'h4b;
                8'hcd : sub = 8'hbd;
                8'hce : sub = 8'h8b;
                8'hcf : sub = 8'h8a;
                8'hd0 : sub = 8'h70;
                8'hd1 : sub = 8'h3e;
                8'hd2 : sub = 8'hb5;
                8'hd3 : sub = 8'h66;
                8'hd4 : sub = 8'h48;
                8'hd5 : sub = 8'h03;
                8'hd6 : sub = 8'hf6;
                8'hd7 : sub = 8'h0e;
                8'hd8 : sub = 8'h61;
                8'hd9 : sub = 8'h35;
                8'hda : sub = 8'h57;
                8'hdb : sub = 8'hb9;
                8'hdc : sub = 8'h86;
                8'hdd : sub = 8'hc1;
                8'hde : sub = 8'h1d;
                8'hdf : sub = 8'h9e;
                8'he0 : sub = 8'he1;
                8'he1 : sub = 8'hf8;
                8'he2 : sub = 8'h98;
                8'he3 : sub = 8'h11;
                8'he4 : sub = 8'h69;
                8'he5 : sub = 8'hd9;
                8'he6 : sub = 8'h8e;
                8'he7 : sub = 8'h94;
                8'he8 : sub = 8'h9b;
                8'he9 : sub = 8'h1e;
                8'hea : sub = 8'h87;
                8'heb : sub = 8'he9;
                8'hec : sub = 8'hce;
                8'hed : sub = 8'h55;
                8'hee : sub = 8'h28;
                8'hef : sub = 8'hdf;
                8'hf0 : sub = 8'h8c;
                8'hf1 : sub = 8'ha1;
                8'hf2 : sub = 8'h89;
                8'hf3 : sub = 8'h0d;
                8'hf4 : sub = 8'hbf;
                8'hf5 : sub = 8'he6;
                8'hf6 : sub = 8'h42;
                8'hf7 : sub = 8'h68;
                8'hf8 : sub = 8'h41;
                8'hf9 : sub = 8'h99;
                8'hfa : sub = 8'h2d;
                8'hfb : sub = 8'h0f;
                8'hfc : sub = 8'hb0;
                8'hfd : sub = 8'h54;
                8'hfe : sub = 8'hbb;
                8'hff : sub = 8'h16;
            endcase
        end
    endfunction
    
    
    //==========================================================================
    //  Module Connection
    //==========================================================================
    
    
    
endmodule

